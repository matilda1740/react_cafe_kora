{"ast":null,"code":"import { db } from './firebase';\nexport const initialState = {\n  users: [],\n  products: []\n};\nexport const reducer = (prevState = initialState, action) => {\n  const customersRef = db.collection('user');\n  const productsRef = db.collection('product');\n\n  switch (action.type) {\n    case \"delete_product\":\n      let copyProducts = [...prevState.products];\n\n      try {\n        customersRef.where(\"userID\", \"==\", `${action.targetID}`).get().then(snapshot => {\n          snapshot.forEach(item => {\n            productsRef.doc(item.id).delete();\n          });\n        }).then(() => {\n          return copyProducts.filter(product => product.product_id !== action.targetID);\n        }).catch(error => console.log(\"Deletion Error: \", error));\n      } catch (error) {\n        console.log(\"Deletion Error: \", error);\n      }\n\n      return { ...prevState,\n        products: copyProducts\n      };\n\n    case \"fetch_products\":\n      let fetchedProducts = [...prevState.products];\n\n      try {\n        productsRef.onSnapshot(snapshot => {\n          snapshot.docs.forEach(item => {\n            // fetchedProducts = [...prevState.products]\n            if ((fetchedProducts === null || fetchedProducts === void 0 ? void 0 : fetchedProducts.length) === 0) {\n              fetchedProducts.push(item.data());\n            } else {\n              let itemExists = fetchedProducts.findIndex(product => product.product_id === item.data().product_id);\n\n              if (itemExists < 0) {\n                fetchedProducts.push(item.data());\n              }\n            }\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      return { ...prevState,\n        products: fetchedProducts\n      };\n\n    case \"fetch_user_details\":\n      let copyUsers = [...prevState.users];\n      let selectedUser;\n      customersRef.where(\"userID\", \"==\", `${action.targetID}`).get().then(snapshot => {\n        snapshot.forEach(user => {\n          selectedUser = user.data();\n          return selectedUser;\n        });\n      }).catch(error => console.log(\"Update Error: \", error));\n      console.log(action, selectedUser);\n      return { ...prevState,\n        users: copyUsers\n      };\n\n    default:\n      return prevState;\n  } // return prevState;\n\n};","map":{"version":3,"sources":["/Users/matildamwendwa/Documents/Strathmore/Year 2/Web Application Dev/react_semester_project/src/components/reducer.js"],"names":["db","initialState","users","products","reducer","prevState","action","customersRef","collection","productsRef","type","copyProducts","where","targetID","get","then","snapshot","forEach","item","doc","id","delete","filter","product","product_id","catch","error","console","log","fetchedProducts","onSnapshot","docs","length","push","data","itemExists","findIndex","copyUsers","selectedUser","user"],"mappings":"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","sourcesContent":["\nimport { db } from './firebase'\n\nexport const initialState = {\n    users: [],\n    products: []\n\n};\n\n\nexport const reducer = (prevState = initialState, action) => {\n    const customersRef = db.collection('user')\n    const productsRef = db.collection('product')\n\n\n    switch(action.type) {\n\n        case \"delete_product\" :\n            let copyProducts =  [...prevState.products];\n            try{ \n                customersRef\n                    .where(\"userID\", \"==\", `${action.targetID}`)\n                    .get()\n                    .then( snapshot => {\n                        snapshot.forEach( item => {\n                            productsRef.doc(item.id).delete() \n                        })\n                    })\n                    .then( () => {\n                        return copyProducts.filter( product => product.product_id !== action.targetID);\n                    })\n                    .catch(error => console.log(\"Deletion Error: \", error))   \n                    \n                    \n            }catch(error){\n                console.log(\"Deletion Error: \", error)\n            }            \n            return {\n                ...prevState, \n                products: copyProducts,                \n            }\n        case \"fetch_products\":\n            let fetchedProducts = [...prevState.products];\n            try{\n                productsRef \n                .onSnapshot((snapshot) => {\n                    snapshot.docs.forEach( item => {\n                        // fetchedProducts = [...prevState.products]\n                        if(fetchedProducts?.length === 0){\n                            fetchedProducts.push(item.data())\n                        }else{\n                            let itemExists = fetchedProducts.findIndex( product => product.product_id === item.data().product_id)\n\n                            if(itemExists < 0){\n                                fetchedProducts.push(item.data())\n                            }\n                        }\n                    })\n                })\n            }catch(error){\n                console.log(error)\n            }\n            return{\n                ...prevState, \n                products: fetchedProducts,\n            }\n\n        case \"fetch_user_details\":\n            let copyUsers = [...prevState.users]\n\n            let selectedUser;\n            customersRef\n                .where(\"userID\", \"==\", `${action.targetID}`)\n                    .get()\n                    .then( snapshot => {\n                        snapshot.forEach( user => {\n                            selectedUser = user.data()\n                            return selectedUser\n                        })\n                    })\n                    .catch( (error) => console.log(\"Update Error: \", error))\n            console.log(action, selectedUser)\n            return{\n                ...prevState,\n                users: copyUsers,\n            }\n\n\n        default: \n            return prevState;\n    }\n            // return prevState;\n\n}\n\n"]},"metadata":{},"sourceType":"module"}