{"ast":null,"code":"var _jsxFileName = \"/Users/matildamwendwa/Documents/Strathmore/Year 2/Web Application Dev/react_semester_project/src/components/adminComponents/ViewCustomers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './ViewCustomers.css';\nimport { db } from '../firebase';\nimport { Create, Delete } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ViewCustomers({\n  customers\n}) {\n  _s();\n\n  const [currentCustomers, setCurrentCustomers] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const customersRef = db.collection('user'); // const trackChange =  () => {\n  //     customersRef.onSnapshot( snapshot => {\n  //         snapshot.docChanges().forEach( (change) => {\n  //             if(change.type === \"added\"){\n  //                 console.log(change.doc.data())\n  //             }else if(change.type === \"removed\"){\n  //                 console.log(change)\n  //             }else if(change.type === \"modified\"){\n  //             }\n  //         })\n  //     })\n  // }    \n\n  useEffect(() => {\n    if (currentCustomers === undefined) {\n      setCurrentCustomers(customers);\n    } else {\n      let setObj = new Set();\n      let result = currentCustomers.reduce((acc, item) => {\n        if (!setObj.has(item.userID)) {\n          setObj.add(item.userID, item);\n          acc.push(item);\n        }\n\n        return acc;\n      }, []);\n      setCurrentCustomers(result);\n    }\n  }, []);\n\n  const handleDelete = async e => {\n    e.preventDefault();\n    let delUserID = e.target.parentNode.parentNode.parentNode.id;\n\n    if (window.confirm(\"Are You Sure you want to delete this record\")) {\n      try {\n        customersRef.where(\"userID\", \"==\", `${delUserID}`).get().then(snapshot => {\n          snapshot.forEach(user => {\n            customersRef.doc(user.id).delete();\n          });\n        }).then(() => {\n          const filtered = customers.filter(user => user.userID !== delUserID);\n          setCurrentCustomers([...new Set([...filtered])]);\n        }).catch(error => console.log(\"Deletion Error: \", error));\n      } catch (error) {\n        console.log(\"Deletion Error: \", error);\n      }\n    }\n  };\n\n  const handleUpdate = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome_bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"welcome_text\",\n        children: \"Cafe Kora Customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome_ptag\",\n        children: [\"Total Customers: \", currentCustomers === null || currentCustomers === void 0 ? void 0 : currentCustomers.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), (currentCustomers === null || currentCustomers === void 0 ? void 0 : currentCustomers.length) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operations_section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display_area\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"customers_table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date Joined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n              id: customer.userID,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: customer.fname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: customer.lname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: customer.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: customer.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: customer.datejoined.toDate().toDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Delete, {\n                  onClick: handleDelete\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Create, {\n                  onClick: handleUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this)]\n            }, customer.userID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome_bar\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome_ptag\",\n        children: \"Loading Customers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ViewCustomers, \"7hETBxnIfqsydjdcIq3sRQsYqUA=\");\n\n_c = ViewCustomers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCustomers\");","map":{"version":3,"sources":["/Users/matildamwendwa/Documents/Strathmore/Year 2/Web Application Dev/react_semester_project/src/components/adminComponents/ViewCustomers.js"],"names":["React","useEffect","useState","db","Create","Delete","ViewCustomers","customers","currentCustomers","setCurrentCustomers","isLoading","setIsLoading","customersRef","collection","undefined","setObj","Set","result","reduce","acc","item","has","userID","add","push","handleDelete","e","preventDefault","delUserID","target","parentNode","id","window","confirm","where","get","then","snapshot","forEach","user","doc","delete","filtered","filter","catch","error","console","log","handleUpdate","length","map","customer","fname","lname","email","phone","datejoined","toDate","toDateString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './ViewCustomers.css'\nimport { db } from '../firebase'\n\nimport {Create, Delete } from '@material-ui/icons';\n\nexport default function ViewCustomers({ customers }) {\n \n    const [currentCustomers, setCurrentCustomers] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n\n    const customersRef = db.collection('user')\n\n    // const trackChange =  () => {\n    //     customersRef.onSnapshot( snapshot => {\n    //         snapshot.docChanges().forEach( (change) => {\n    //             if(change.type === \"added\"){\n    //                 console.log(change.doc.data())\n    //             }else if(change.type === \"removed\"){\n    //                 console.log(change)\n    //             }else if(change.type === \"modified\"){\n\n    //             }\n\n    //         })\n    //     })\n    // }    \n\n    useEffect(() => {\n        if(currentCustomers === undefined){\n            setCurrentCustomers(customers)\n        }else{\n            let setObj = new Set();\n\n            let result = currentCustomers.reduce((acc,item)=>{\n            if(!setObj.has(item.userID)){\n                setObj.add(item.userID,item)\n                acc.push(item)\n            }\n            return acc;\n            },[]); \n            setCurrentCustomers(result)\n\n        }\n\n    }, [])\n\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        let delUserID = e.target.parentNode.parentNode.parentNode.id;\n        if(window.confirm(\"Are You Sure you want to delete this record\")){\n            try{ \n                customersRef\n                    .where(\"userID\", \"==\", `${delUserID}`)\n                    .get()\n                    .then( snapshot => {\n                        snapshot.forEach( user => {\n                            customersRef.doc(user.id).delete() \n                        })\n                    })\n                    .then( () => {\n                        const filtered = customers.filter( (user) => user.userID !== delUserID );\n                        setCurrentCustomers([...new Set([...filtered])])\n                    })\n                    .catch(error => console.log(\"Deletion Error: \", error))         \n            }catch(error){\n                console.log(\"Deletion Error: \", error)\n            }\n        }\n    }\n\n    const handleUpdate = () => {\n\n    }\n\n\n    return (\n        <>\n            <div className=\"welcome_bar\">\n            <h4 className=\"welcome_text\">\n                Cafe Kora Customers \n            </h4>\n            <p className=\"welcome_ptag\">Total Customers: {currentCustomers?.length}</p>\n            \n        </div>\n        {\n\n            currentCustomers?.length ?\n        <>\n\n        <div className=\"operations_section\">\n\n        </div>\n        <div className=\"display_area\">\n            <table className=\"customers_table\">\n                <thead>\n                    <tr>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Email Address</th>\n                        <th>Phone Number</th>\n                        <th>Date Joined</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    currentCustomers.map( customer => \n                        <tr key={customer.userID} id={customer.userID}>\n                            <td>{customer.fname}</td>\n                            <td>{customer.lname}</td>\n                            <td>{customer.email}</td>\n                            <td>{customer.phone}</td>\n                            <td>{customer.datejoined.toDate().toDateString()}</td>\n                            <td>\n                            <Delete onClick={handleDelete}/>\n                            <Create onClick={handleUpdate}/>\n                            </td>\n                        </tr>\n                    )\n                }\n                </tbody>    \n\n            </table>\n        </div> \n        </>\n            :\n            <div className=\"welcome_bar\">\n                <p className=\"welcome_ptag\">Loading Customers...</p>            \n            </div>            \n        }\n           \n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}