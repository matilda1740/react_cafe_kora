{"ast":null,"code":"import { db } from './firebase';\nexport const initialState = {\n  users: [],\n  products: []\n};\nexport const reducer = (prevState = initialState, action) => {\n  const customersRef = db.collection('user');\n  const productsRef = db.collection('products');\n\n  switch (action.type) {\n    case \"fetch_products\":\n      let copyProducts = [...prevState.products]; // customersRef\n      // .onSnapshot((snapshot) => {\n      //     snapshot.docs.forEach( user => {\n      //             user.data().type === 'customer' ?\n      //                 // setUsers(prevState => [...prevState, user.data()])\n      //                     customers.push(user.data())\n      //                 : user.data().type === 'admin' &&\n      //                     admin.push(user.data())                           \n      //                 // setTeam(prevState => [...prevState, user.data()]) \n      //             })\n      // }, error =>{\n      //     console.log(error)\n      // })\n\n      return { ...prevState,\n        users: copyProducts\n      };\n\n    case \"fetch_user_details\":\n      let copyUsers = [...prevState.users];\n      let selectedUser;\n      customersRef.where(\"userID\", \"==\", `${action.targetID}`).get().then(snapshot => {\n        snapshot.forEach(user => {\n          selectedUser = user.data();\n          return selectedUser;\n        });\n      }).catch(error => console.log(\"Update Error: \", error));\n      console.log(action, selectedUser);\n      return { ...prevState,\n        users: copyUsers\n      };\n\n    default:\n      return prevState;\n  } // return prevState;\n\n};","map":{"version":3,"sources":["/Users/matildamwendwa/Documents/Strathmore/Year 2/Web Application Dev/react_semester_project/src/components/reducer.js"],"names":["db","initialState","users","products","reducer","prevState","action","customersRef","collection","productsRef","type","copyProducts","copyUsers","selectedUser","where","targetID","get","then","snapshot","forEach","user","data","catch","error","console","log"],"mappings":"AACA,SAASA,EAAT,QAAmB,YAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,QAAQ,EAAE;AAFc,CAArB;AAOP,OAAO,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAGJ,YAAb,EAA2BK,MAA3B,KAAsC;AACzD,QAAMC,YAAY,GAAGP,EAAE,CAACQ,UAAH,CAAc,MAAd,CAArB;AACA,QAAMC,WAAW,GAAGT,EAAE,CAACQ,UAAH,CAAc,UAAd,CAApB;;AAGA,UAAOF,MAAM,CAACI,IAAd;AAEI,SAAK,gBAAL;AACI,UAAIC,YAAY,GAAG,CAAC,GAAGN,SAAS,CAACF,QAAd,CAAnB,CADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,aAAM,EACF,GAAGE,SADD;AAEFH,QAAAA,KAAK,EAAES;AAFL,OAAN;;AAKJ,SAAK,oBAAL;AACI,UAAIC,SAAS,GAAG,CAAC,GAAGP,SAAS,CAACH,KAAd,CAAhB;AAEA,UAAIW,YAAJ;AACAN,MAAAA,YAAY,CACPO,KADL,CACW,QADX,EACqB,IADrB,EAC4B,GAAER,MAAM,CAACS,QAAS,EAD9C,EAESC,GAFT,GAGSC,IAHT,CAGeC,QAAQ,IAAI;AACfA,QAAAA,QAAQ,CAACC,OAAT,CAAkBC,IAAI,IAAI;AACtBP,UAAAA,YAAY,GAAGO,IAAI,CAACC,IAAL,EAAf;AACA,iBAAOR,YAAP;AACH,SAHD;AAIH,OART,EASSS,KATT,CASiBC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,CAT3B;AAUAC,MAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ,EAAoBO,YAApB;AACA,aAAM,EACF,GAAGR,SADD;AAEFH,QAAAA,KAAK,EAAEU;AAFL,OAAN;;AAMJ;AACI,aAAOP,SAAP;AA/CR,GALyD,CAsDjD;;AAEX,CAxDM","sourcesContent":["\nimport { db } from './firebase'\n\nexport const initialState = {\n    users: [],\n    products: []\n\n};\n\n\nexport const reducer = (prevState = initialState, action) => {\n    const customersRef = db.collection('user')\n    const productsRef = db.collection('products')\n\n\n    switch(action.type) {\n\n        case \"fetch_products\":\n            let copyProducts = [...prevState.products]\n            // customersRef\n            // .onSnapshot((snapshot) => {\n            //     snapshot.docs.forEach( user => {\n            //             user.data().type === 'customer' ?\n            //                 // setUsers(prevState => [...prevState, user.data()])\n            //                     customers.push(user.data())\n            //                 : user.data().type === 'admin' &&\n            //                     admin.push(user.data())                           \n            //                 // setTeam(prevState => [...prevState, user.data()]) \n\n            //             })\n            // }, error =>{\n            //     console.log(error)\n            // })\n                 \n\n            return{\n                ...prevState, \n                users: copyProducts,\n            }\n\n        case \"fetch_user_details\":\n            let copyUsers = [...prevState.users]\n\n            let selectedUser;\n            customersRef\n                .where(\"userID\", \"==\", `${action.targetID}`)\n                    .get()\n                    .then( snapshot => {\n                        snapshot.forEach( user => {\n                            selectedUser = user.data()\n                            return selectedUser\n                        })\n                    })\n                    .catch( (error) => console.log(\"Update Error: \", error))\n            console.log(action, selectedUser)\n            return{\n                ...prevState,\n                users: copyUsers,\n            }\n\n\n        default: \n            return prevState;\n    }\n            // return prevState;\n\n}\n\n"]},"metadata":{},"sourceType":"module"}