{"ast":null,"code":"import { db } from './firebase';\nexport const initialState = {\n  users: [],\n  products: []\n};\nexport const reducer = (prevState = initialState, action) => {\n  const customersRef = db.collection('user');\n\n  switch (action.type) {\n    case \"fetch_user_details\":\n      let copyUsers = [...prevState.users];\n      let selectedUser;\n      customersRef.where(\"userID\", \"==\", `${action.targetID}`).get().then(snapshot => console.log(\"Selected User: \", selectedUser.data())).catch(error => console.log(\"Update Error: \", error));\n      console.log(action);\n      return { ...prevState,\n        users: copyUsers\n      };\n\n    default:\n      return prevState;\n  } // return prevState;\n\n};","map":{"version":3,"sources":["/Users/matildamwendwa/Documents/Strathmore/Year 2/Web Application Dev/react_semester_project/src/components/reducer.js"],"names":["db","initialState","users","products","reducer","prevState","action","customersRef","collection","type","copyUsers","selectedUser","where","targetID","get","then","snapshot","console","log","data","catch","error"],"mappings":"AACA,SAASA,EAAT,QAAmB,YAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,QAAQ,EAAE;AAFc,CAArB;AAOP,OAAO,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAGJ,YAAb,EAA2BK,MAA3B,KAAsC;AACzD,QAAMC,YAAY,GAAGP,EAAE,CAACQ,UAAH,CAAc,MAAd,CAArB;;AAEA,UAAOF,MAAM,CAACG,IAAd;AAGI,SAAK,oBAAL;AACI,UAAIC,SAAS,GAAG,CAAC,GAAGL,SAAS,CAACH,KAAd,CAAhB;AAEA,UAAIS,YAAJ;AACAJ,MAAAA,YAAY,CACPK,KADL,CACW,QADX,EACqB,IADrB,EAC4B,GAAEN,MAAM,CAACO,QAAS,EAD9C,EAESC,GAFT,GAGSC,IAHT,CAGeC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,YAAY,CAACQ,IAAb,EAA/B,CAH3B,EAISC,KAJT,CAIiBC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B,CAJ3B;AAKAJ,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACA,aAAM,EACF,GAAGD,SADD;AAEFH,QAAAA,KAAK,EAAEQ;AAFL,OAAN;;AAMJ;AACI,aAAOL,SAAP;AApBR,GAHyD,CAyBjD;;AAEX,CA3BM","sourcesContent":["\nimport { db } from './firebase'\n\nexport const initialState = {\n    users: [],\n    products: []\n\n};\n\n\nexport const reducer = (prevState = initialState, action) => {\n    const customersRef = db.collection('user')\n\n    switch(action.type) {\n\n\n        case \"fetch_user_details\":\n            let copyUsers = [...prevState.users]\n\n            let selectedUser;\n            customersRef\n                .where(\"userID\", \"==\", `${action.targetID}`)\n                    .get()\n                    .then( snapshot => console.log(\"Selected User: \", selectedUser.data()))\n                    .catch( (error) => console.log(\"Update Error: \", error))\n            console.log(action)\n            return{\n                ...prevState,\n                users: copyUsers,\n            }\n\n\n        default: \n            return prevState;\n    }\n            // return prevState;\n\n}\n\n"]},"metadata":{},"sourceType":"module"}