{"ast":null,"code":"import { db } from './firebase';\nexport const initialState = {\n  users: [],\n  products: []\n};\nexport const reducer = async (prevState = initialState, action) => {\n  const customersRef = db.collection('user');\n  const productsRef = db.collection('product');\n\n  switch (action.type) {\n    case \"delete_product\":\n      let copyProducts = [...prevState.products];\n      console.log(action);\n\n      try {\n        customersRef.where(\"userID\", \"==\", `${action.targetID}`).get().then(snapshot => {\n          snapshot.forEach(user => {\n            productsRef.doc(user.id).delete();\n          });\n        }).then(() => {\n          const filtered = copyProducts.filter(product => product.product_id !== action.targetID);\n          console.log(filtered);\n        }).catch(error => console.log(\"Deletion Error: \", error));\n      } catch (error) {\n        console.log(\"Deletion Error: \", error);\n      }\n\n      return { ...prevState,\n        products: copyProducts\n      };\n\n    case \"fetch_products\":\n      let fetchedProducts = [...prevState.products];\n      console.log(action);\n      await productsRef.onSnapshot(snapshot => {\n        snapshot.docs.forEach(item => {\n          try {\n            if (fetchedProducts.length === 0) {\n              fetchedProducts.push(item.data());\n            } else {\n              let itemExists = fetchedProducts.findIndex(product => product.product_id === item.data().product_id);\n\n              if (itemExists < 0) {\n                fetchedProducts.push(item.data());\n              }\n            }\n          } catch (error) {\n            console.log(error);\n          }\n        });\n      });\n      return { ...prevState,\n        products: fetchedProducts\n      };\n\n    case \"fetch_user_details\":\n      let copyUsers = [...prevState.users];\n      let selectedUser;\n      customersRef.where(\"userID\", \"==\", `${action.targetID}`).get().then(snapshot => {\n        snapshot.forEach(user => {\n          selectedUser = user.data();\n          return selectedUser;\n        });\n      }).catch(error => console.log(\"Update Error: \", error));\n      console.log(action, selectedUser);\n      return { ...prevState,\n        users: copyUsers\n      };\n\n    default:\n      return prevState;\n  } // return prevState;\n\n};","map":{"version":3,"sources":["/Users/matildamwendwa/Documents/Strathmore/Year 2/Web Application Dev/react_semester_project/src/components/reducer.js"],"names":["db","initialState","users","products","reducer","prevState","action","customersRef","collection","productsRef","type","copyProducts","console","log","where","targetID","get","then","snapshot","forEach","user","doc","id","delete","filtered","filter","product","product_id","catch","error","fetchedProducts","onSnapshot","docs","item","length","push","data","itemExists","findIndex","copyUsers","selectedUser"],"mappings":"AACA,SAASA,EAAT,QAAmB,YAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,QAAQ,EAAE;AAFc,CAArB;AAOP,OAAO,MAAMC,OAAO,GAAG,OAAOC,SAAS,GAAGJ,YAAnB,EAAiCK,MAAjC,KAA4C;AAC/D,QAAMC,YAAY,GAAGP,EAAE,CAACQ,UAAH,CAAc,MAAd,CAArB;AACA,QAAMC,WAAW,GAAGT,EAAE,CAACQ,UAAH,CAAc,SAAd,CAApB;;AAGA,UAAOF,MAAM,CAACI,IAAd;AAEI,SAAK,gBAAL;AACI,UAAIC,YAAY,GAAG,CAAC,GAAGN,SAAS,CAACF,QAAd,CAAnB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AACA,UAAG;AACCC,QAAAA,YAAY,CACPO,KADL,CACW,QADX,EACqB,IADrB,EAC4B,GAAER,MAAM,CAACS,QAAS,EAD9C,EAEKC,GAFL,GAGKC,IAHL,CAGWC,QAAQ,IAAI;AACfA,UAAAA,QAAQ,CAACC,OAAT,CAAkBC,IAAI,IAAI;AACtBX,YAAAA,WAAW,CAACY,GAAZ,CAAgBD,IAAI,CAACE,EAArB,EAAyBC,MAAzB;AACH,WAFD;AAGH,SAPL,EAQKN,IARL,CAQW,MAAM;AACT,gBAAMO,QAAQ,GAAGb,YAAY,CAACc,MAAb,CAAqBC,OAAO,IAAIA,OAAO,CAACC,UAAR,KAAuBrB,MAAM,CAACS,QAA9D,CAAjB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACH,SAXL,EAYKI,KAZL,CAYWC,KAAK,IAAIjB,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCgB,KAAhC,CAZpB;AAaH,OAdD,CAcC,OAAMA,KAAN,EAAY;AACTjB,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCgB,KAAhC;AACH;;AACD,aAAO,EACH,GAAGxB,SADA;AAEHF,QAAAA,QAAQ,EAAEQ;AAFP,OAAP;;AAIJ,SAAK,gBAAL;AACI,UAAImB,eAAe,GAAG,CAAC,GAAGzB,SAAS,CAACF,QAAd,CAAtB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,YAAMG,WAAW,CAChBsB,UADK,CACOb,QAAD,IAAc;AACtBA,QAAAA,QAAQ,CAACc,IAAT,CAAcb,OAAd,CAAuBc,IAAI,IAAI;AAC3B,cAAG;AACC,gBAAGH,eAAe,CAACI,MAAhB,KAA2B,CAA9B,EAAgC;AAC5BJ,cAAAA,eAAe,CAACK,IAAhB,CAAqBF,IAAI,CAACG,IAAL,EAArB;AACH,aAFD,MAEK;AACD,kBAAIC,UAAU,GAAGP,eAAe,CAACQ,SAAhB,CAA2BZ,OAAO,IAAIA,OAAO,CAACC,UAAR,KAAuBM,IAAI,CAACG,IAAL,GAAYT,UAAzE,CAAjB;;AAEA,kBAAGU,UAAU,GAAG,CAAhB,EAAkB;AACdP,gBAAAA,eAAe,CAACK,IAAhB,CAAqBF,IAAI,CAACG,IAAL,EAArB;AACH;AACJ;AACJ,WAVD,CAUC,OAAMP,KAAN,EAAY;AACTjB,YAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACH;AAGJ,SAhBD;AAiBH,OAnBK,CAAN;AAoBA,aAAM,EACF,GAAGxB,SADD;AAEFF,QAAAA,QAAQ,EAAE2B;AAFR,OAAN;;AAKJ,SAAK,oBAAL;AACI,UAAIS,SAAS,GAAG,CAAC,GAAGlC,SAAS,CAACH,KAAd,CAAhB;AAEA,UAAIsC,YAAJ;AACAjC,MAAAA,YAAY,CACPO,KADL,CACW,QADX,EACqB,IADrB,EAC4B,GAAER,MAAM,CAACS,QAAS,EAD9C,EAESC,GAFT,GAGSC,IAHT,CAGeC,QAAQ,IAAI;AACfA,QAAAA,QAAQ,CAACC,OAAT,CAAkBC,IAAI,IAAI;AACtBoB,UAAAA,YAAY,GAAGpB,IAAI,CAACgB,IAAL,EAAf;AACA,iBAAOI,YAAP;AACH,SAHD;AAIH,OART,EASSZ,KATT,CASiBC,KAAD,IAAWjB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BgB,KAA9B,CAT3B;AAUAjB,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAAoBkC,YAApB;AACA,aAAM,EACF,GAAGnC,SADD;AAEFH,QAAAA,KAAK,EAAEqC;AAFL,OAAN;;AAMJ;AACI,aAAOlC,SAAP;AA5ER,GAL+D,CAmFvD;;AAEX,CArFM","sourcesContent":["\nimport { db } from './firebase'\n\nexport const initialState = {\n    users: [],\n    products: []\n\n};\n\n\nexport const reducer = async (prevState = initialState, action) => {\n    const customersRef = db.collection('user')\n    const productsRef = db.collection('product')\n\n\n    switch(action.type) {\n\n        case \"delete_product\" :\n            let copyProducts = [...prevState.products]\n            console.log(action)\n            try{ \n                customersRef\n                    .where(\"userID\", \"==\", `${action.targetID}`)\n                    .get()\n                    .then( snapshot => {\n                        snapshot.forEach( user => {\n                            productsRef.doc(user.id).delete() \n                        })\n                    })\n                    .then( () => {\n                        const filtered = copyProducts.filter( product => product.product_id !== action.targetID);\n                        console.log(filtered)\n                    })\n                    .catch(error => console.log(\"Deletion Error: \", error))         \n            }catch(error){\n                console.log(\"Deletion Error: \", error)\n            }            \n            return {\n                ...prevState, \n                products: copyProducts,                \n            }\n        case \"fetch_products\":\n            let fetchedProducts = [...prevState.products]\n            console.log(action)\n            await productsRef \n            .onSnapshot((snapshot) => {\n                snapshot.docs.forEach( item => {\n                    try{\n                        if(fetchedProducts.length === 0){\n                            fetchedProducts.push(item.data())\n                        }else{\n                            let itemExists = fetchedProducts.findIndex( product => product.product_id === item.data().product_id)\n\n                            if(itemExists < 0){\n                                fetchedProducts.push(item.data())\n                            }\n                        }\n                    }catch(error){\n                        console.log(error)\n                    }\n\n\n                })\n            })\n            return{\n                ...prevState, \n                products: fetchedProducts,\n            }\n\n        case \"fetch_user_details\":\n            let copyUsers = [...prevState.users]\n\n            let selectedUser;\n            customersRef\n                .where(\"userID\", \"==\", `${action.targetID}`)\n                    .get()\n                    .then( snapshot => {\n                        snapshot.forEach( user => {\n                            selectedUser = user.data()\n                            return selectedUser\n                        })\n                    })\n                    .catch( (error) => console.log(\"Update Error: \", error))\n            console.log(action, selectedUser)\n            return{\n                ...prevState,\n                users: copyUsers,\n            }\n\n\n        default: \n            return prevState;\n    }\n            // return prevState;\n\n}\n\n"]},"metadata":{},"sourceType":"module"}