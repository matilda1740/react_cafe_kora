{"ast":null,"code":"import { db } from './firebase';\nexport const initialState = {\n  users: [],\n  products: []\n};\nexport const reducer = (prevState = initialState, action) => {\n  const customersRef = db.collection('user');\n  const productsRef = db.collection('product');\n\n  switch (action.type) {\n    case \"fetch_products\":\n      let copyProducts = [...prevState.products];\n      console.log(action);\n      productsRef.onSnapshot(snapshot => {\n        snapshot.docs.forEach(item => {\n          try {\n            console.log(item.data());\n          } catch (error) {\n            console.log(error);\n          }\n        });\n      });\n      return { ...prevState,\n        products: copyProducts\n      };\n\n    case \"fetch_user_details\":\n      let copyUsers = [...prevState.users];\n      let selectedUser;\n      customersRef.where(\"userID\", \"==\", `${action.targetID}`).get().then(snapshot => {\n        snapshot.forEach(user => {\n          selectedUser = user.data();\n          return selectedUser;\n        });\n      }).catch(error => console.log(\"Update Error: \", error));\n      console.log(action, selectedUser);\n      return { ...prevState,\n        users: copyUsers\n      };\n\n    default:\n      return prevState;\n  } // return prevState;\n\n};","map":{"version":3,"sources":["/Users/matildamwendwa/Documents/Strathmore/Year 2/Web Application Dev/react_semester_project/src/components/reducer.js"],"names":["db","initialState","users","products","reducer","prevState","action","customersRef","collection","productsRef","type","copyProducts","console","log","onSnapshot","snapshot","docs","forEach","item","data","error","copyUsers","selectedUser","where","targetID","get","then","user","catch"],"mappings":"AACA,SAASA,EAAT,QAAmB,YAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,QAAQ,EAAE;AAFc,CAArB;AAOP,OAAO,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAGJ,YAAb,EAA2BK,MAA3B,KAAsC;AACzD,QAAMC,YAAY,GAAGP,EAAE,CAACQ,UAAH,CAAc,MAAd,CAArB;AACA,QAAMC,WAAW,GAAGT,EAAE,CAACQ,UAAH,CAAc,SAAd,CAApB;;AAGA,UAAOF,MAAM,CAACI,IAAd;AAEI,SAAK,gBAAL;AACI,UAAIC,YAAY,GAAG,CAAC,GAAGN,SAAS,CAACF,QAAd,CAAnB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAG,MAAAA,WAAW,CACVK,UADD,CACaC,QAAD,IAAc;AACtBA,QAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAuBC,IAAI,IAAI;AAC3B,cAAG;AACCN,YAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,IAAL,EAAZ;AACH,WAFD,CAEC,OAAMC,KAAN,EAAY;AACTR,YAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;AAGJ,SARD;AASH,OAXD;AAYA,aAAM,EACF,GAAGf,SADD;AAEFF,QAAAA,QAAQ,EAAEQ;AAFR,OAAN;;AAKJ,SAAK,oBAAL;AACI,UAAIU,SAAS,GAAG,CAAC,GAAGhB,SAAS,CAACH,KAAd,CAAhB;AAEA,UAAIoB,YAAJ;AACAf,MAAAA,YAAY,CACPgB,KADL,CACW,QADX,EACqB,IADrB,EAC4B,GAAEjB,MAAM,CAACkB,QAAS,EAD9C,EAESC,GAFT,GAGSC,IAHT,CAGeX,QAAQ,IAAI;AACfA,QAAAA,QAAQ,CAACE,OAAT,CAAkBU,IAAI,IAAI;AACtBL,UAAAA,YAAY,GAAGK,IAAI,CAACR,IAAL,EAAf;AACA,iBAAOG,YAAP;AACH,SAHD;AAIH,OART,EASSM,KATT,CASiBR,KAAD,IAAWR,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,KAA9B,CAT3B;AAUAR,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAAoBgB,YAApB;AACA,aAAM,EACF,GAAGjB,SADD;AAEFH,QAAAA,KAAK,EAAEmB;AAFL,OAAN;;AAMJ;AACI,aAAOhB,SAAP;AA5CR,GALyD,CAmDjD;;AAEX,CArDM","sourcesContent":["\nimport { db } from './firebase'\n\nexport const initialState = {\n    users: [],\n    products: []\n\n};\n\n\nexport const reducer = (prevState = initialState, action) => {\n    const customersRef = db.collection('user')\n    const productsRef = db.collection('product')\n\n\n    switch(action.type) {\n\n        case \"fetch_products\":\n            let copyProducts = [...prevState.products]\n            console.log(action)\n            productsRef \n            .onSnapshot((snapshot) => {\n                snapshot.docs.forEach( item => {\n                    try{\n                        console.log(item.data())\n                    }catch(error){\n                        console.log(error)\n                    }\n\n\n                })\n            })\n            return{\n                ...prevState, \n                products: copyProducts,\n            }\n\n        case \"fetch_user_details\":\n            let copyUsers = [...prevState.users]\n\n            let selectedUser;\n            customersRef\n                .where(\"userID\", \"==\", `${action.targetID}`)\n                    .get()\n                    .then( snapshot => {\n                        snapshot.forEach( user => {\n                            selectedUser = user.data()\n                            return selectedUser\n                        })\n                    })\n                    .catch( (error) => console.log(\"Update Error: \", error))\n            console.log(action, selectedUser)\n            return{\n                ...prevState,\n                users: copyUsers,\n            }\n\n\n        default: \n            return prevState;\n    }\n            // return prevState;\n\n}\n\n"]},"metadata":{},"sourceType":"module"}